# Consumer properties
spring.kafka.consumer.bootstrap-servers=PLAINTEXT://localhost:9092
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=kafka-consumer-id
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=com.kafkaexample.test_infrastructure.CustomKafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=not-used

# Producer properties
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=com.kafkaexample.test_infrastructure.CustomKafkaAvroSerializer
spring.kafka.producer.bootstrap-servers=${spring.embedded.kafka.brokers}
spring.kafka.producer.properties.schema.registry.url=not-used
spring.kafka.producer.linger_ms=10
spring.kafka.producer.acks=all
spring.kafka.producer.retries=10000000
spring.kafka.producer.idempotence_enabled=true
spring.kafka.producer.group-id=kafka-producer-id

topic.name=push.vehicle-position-coordinate.created

spring.kafka.auto.offset.reset = earliest

## Must be set when using SpecificAvro consumers.
## This enables the message to be converted to the generated Class from avro.
spring.kafka.properties.specific.avro.reader=true 