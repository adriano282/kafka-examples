# Producer properties
spring.kafka.producer.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# The producer groups together any records that arrive in between request transmissions into a single batched request
spring.kafka.producer.linger_ms=10

# This means the producer will wait for the full set of minimal in-sync replicas to acknowledge the record
spring.kafka.producer.acks=all

# At least two brokers have had received the message to consider the message published.
# If acks property is set to 0 or 1 the min.insync.replica will haven't any effect
min.insync.replica=2

# This means trying the max attempts value to transition error. For example as eventually unavailability of kafka broker.
spring.kafka.producer.retries=10000000

# This means kafka will guaratee not duplicated messages in case some connection error with kafka broker for example.
# Here's a post explaning this property in detail: https://www.cloudkarafka.com/blog/apache-kafka-idempotent-producer-avoiding-message-duplication.html
spring.kafka.producer.idempotence_enabled=true

spring.kafka.producer.properties.schema.registry.url=http://localhost:8081

spring.kafka.producer.group-id=kafka-producer-id

topic.name=push.vehicle-position-coordinate.created
