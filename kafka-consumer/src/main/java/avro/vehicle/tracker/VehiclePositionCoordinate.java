/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro.vehicle.tracker;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** This as Record that represents the geography coordinate of a vehicle */
@org.apache.avro.specific.AvroGenerated
public class VehiclePositionCoordinate extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5074516077297196083L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VehiclePositionCoordinate\",\"namespace\":\"avro.vehicle.tracker\",\"doc\":\"This as Record that represents the geography coordinate of a vehicle\",\"fields\":[{\"name\":\"vehicle_uuid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"It's the vehicle system unique identification on the format UUID\"},{\"name\":\"x_coordinate\",\"type\":\"int\",\"doc\":\"It's the x geography coordinate position of the tracked vehicle\"},{\"name\":\"y_coordinate\",\"type\":\"int\",\"doc\":\"It's the y geography coordinate position of the tracked vehicle\"},{\"name\":\"vehicle_description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional\"},{\"name\":\"vehicle_price\",\"type\":\"int\",\"doc\":\"It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000.\"}],\"version\":\"0\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<VehiclePositionCoordinate> ENCODER =
      new BinaryMessageEncoder<VehiclePositionCoordinate>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<VehiclePositionCoordinate> DECODER =
      new BinaryMessageDecoder<VehiclePositionCoordinate>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<VehiclePositionCoordinate> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<VehiclePositionCoordinate> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<VehiclePositionCoordinate>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this VehiclePositionCoordinate to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a VehiclePositionCoordinate from a ByteBuffer. */
  public static VehiclePositionCoordinate fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** It's the vehicle system unique identification on the format UUID */
  @Deprecated public java.lang.String vehicle_uuid;
  /** It's the x geography coordinate position of the tracked vehicle */
  @Deprecated public int x_coordinate;
  /** It's the y geography coordinate position of the tracked vehicle */
  @Deprecated public int y_coordinate;
  /** It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional */
  @Deprecated public java.lang.String vehicle_description;
  /** It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000. */
  @Deprecated public int vehicle_price;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public VehiclePositionCoordinate() {}

  /**
   * All-args constructor.
   * @param vehicle_uuid It's the vehicle system unique identification on the format UUID
   * @param x_coordinate It's the x geography coordinate position of the tracked vehicle
   * @param y_coordinate It's the y geography coordinate position of the tracked vehicle
   * @param vehicle_description It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional
   * @param vehicle_price It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000.
   */
  public VehiclePositionCoordinate(java.lang.String vehicle_uuid, java.lang.Integer x_coordinate, java.lang.Integer y_coordinate, java.lang.String vehicle_description, java.lang.Integer vehicle_price) {
    this.vehicle_uuid = vehicle_uuid;
    this.x_coordinate = x_coordinate;
    this.y_coordinate = y_coordinate;
    this.vehicle_description = vehicle_description;
    this.vehicle_price = vehicle_price;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return vehicle_uuid;
    case 1: return x_coordinate;
    case 2: return y_coordinate;
    case 3: return vehicle_description;
    case 4: return vehicle_price;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: vehicle_uuid = (java.lang.String)value$; break;
    case 1: x_coordinate = (java.lang.Integer)value$; break;
    case 2: y_coordinate = (java.lang.Integer)value$; break;
    case 3: vehicle_description = (java.lang.String)value$; break;
    case 4: vehicle_price = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'vehicle_uuid' field.
   * @return It's the vehicle system unique identification on the format UUID
   */
  public java.lang.String getVehicleUuid() {
    return vehicle_uuid;
  }

  /**
   * Sets the value of the 'vehicle_uuid' field.
   * It's the vehicle system unique identification on the format UUID
   * @param value the value to set.
   */
  public void setVehicleUuid(java.lang.String value) {
    this.vehicle_uuid = value;
  }

  /**
   * Gets the value of the 'x_coordinate' field.
   * @return It's the x geography coordinate position of the tracked vehicle
   */
  public java.lang.Integer getXCoordinate() {
    return x_coordinate;
  }

  /**
   * Sets the value of the 'x_coordinate' field.
   * It's the x geography coordinate position of the tracked vehicle
   * @param value the value to set.
   */
  public void setXCoordinate(java.lang.Integer value) {
    this.x_coordinate = value;
  }

  /**
   * Gets the value of the 'y_coordinate' field.
   * @return It's the y geography coordinate position of the tracked vehicle
   */
  public java.lang.Integer getYCoordinate() {
    return y_coordinate;
  }

  /**
   * Sets the value of the 'y_coordinate' field.
   * It's the y geography coordinate position of the tracked vehicle
   * @param value the value to set.
   */
  public void setYCoordinate(java.lang.Integer value) {
    this.y_coordinate = value;
  }

  /**
   * Gets the value of the 'vehicle_description' field.
   * @return It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional
   */
  public java.lang.String getVehicleDescription() {
    return vehicle_description;
  }

  /**
   * Sets the value of the 'vehicle_description' field.
   * It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional
   * @param value the value to set.
   */
  public void setVehicleDescription(java.lang.String value) {
    this.vehicle_description = value;
  }

  /**
   * Gets the value of the 'vehicle_price' field.
   * @return It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000.
   */
  public java.lang.Integer getVehiclePrice() {
    return vehicle_price;
  }

  /**
   * Sets the value of the 'vehicle_price' field.
   * It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000.
   * @param value the value to set.
   */
  public void setVehiclePrice(java.lang.Integer value) {
    this.vehicle_price = value;
  }

  /**
   * Creates a new VehiclePositionCoordinate RecordBuilder.
   * @return A new VehiclePositionCoordinate RecordBuilder
   */
  public static avro.vehicle.tracker.VehiclePositionCoordinate.Builder newBuilder() {
    return new avro.vehicle.tracker.VehiclePositionCoordinate.Builder();
  }

  /**
   * Creates a new VehiclePositionCoordinate RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new VehiclePositionCoordinate RecordBuilder
   */
  public static avro.vehicle.tracker.VehiclePositionCoordinate.Builder newBuilder(avro.vehicle.tracker.VehiclePositionCoordinate.Builder other) {
    return new avro.vehicle.tracker.VehiclePositionCoordinate.Builder(other);
  }

  /**
   * Creates a new VehiclePositionCoordinate RecordBuilder by copying an existing VehiclePositionCoordinate instance.
   * @param other The existing instance to copy.
   * @return A new VehiclePositionCoordinate RecordBuilder
   */
  public static avro.vehicle.tracker.VehiclePositionCoordinate.Builder newBuilder(avro.vehicle.tracker.VehiclePositionCoordinate other) {
    return new avro.vehicle.tracker.VehiclePositionCoordinate.Builder(other);
  }

  /**
   * RecordBuilder for VehiclePositionCoordinate instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VehiclePositionCoordinate>
    implements org.apache.avro.data.RecordBuilder<VehiclePositionCoordinate> {

    /** It's the vehicle system unique identification on the format UUID */
    private java.lang.String vehicle_uuid;
    /** It's the x geography coordinate position of the tracked vehicle */
    private int x_coordinate;
    /** It's the y geography coordinate position of the tracked vehicle */
    private int y_coordinate;
    /** It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional */
    private java.lang.String vehicle_description;
    /** It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000. */
    private int vehicle_price;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro.vehicle.tracker.VehiclePositionCoordinate.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.vehicle_uuid)) {
        this.vehicle_uuid = data().deepCopy(fields()[0].schema(), other.vehicle_uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.x_coordinate)) {
        this.x_coordinate = data().deepCopy(fields()[1].schema(), other.x_coordinate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.y_coordinate)) {
        this.y_coordinate = data().deepCopy(fields()[2].schema(), other.y_coordinate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicle_description)) {
        this.vehicle_description = data().deepCopy(fields()[3].schema(), other.vehicle_description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vehicle_price)) {
        this.vehicle_price = data().deepCopy(fields()[4].schema(), other.vehicle_price);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing VehiclePositionCoordinate instance
     * @param other The existing instance to copy.
     */
    private Builder(avro.vehicle.tracker.VehiclePositionCoordinate other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.vehicle_uuid)) {
        this.vehicle_uuid = data().deepCopy(fields()[0].schema(), other.vehicle_uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.x_coordinate)) {
        this.x_coordinate = data().deepCopy(fields()[1].schema(), other.x_coordinate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.y_coordinate)) {
        this.y_coordinate = data().deepCopy(fields()[2].schema(), other.y_coordinate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicle_description)) {
        this.vehicle_description = data().deepCopy(fields()[3].schema(), other.vehicle_description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vehicle_price)) {
        this.vehicle_price = data().deepCopy(fields()[4].schema(), other.vehicle_price);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'vehicle_uuid' field.
      * It's the vehicle system unique identification on the format UUID
      * @return The value.
      */
    public java.lang.String getVehicleUuid() {
      return vehicle_uuid;
    }

    /**
      * Sets the value of the 'vehicle_uuid' field.
      * It's the vehicle system unique identification on the format UUID
      * @param value The value of 'vehicle_uuid'.
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder setVehicleUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.vehicle_uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicle_uuid' field has been set.
      * It's the vehicle system unique identification on the format UUID
      * @return True if the 'vehicle_uuid' field has been set, false otherwise.
      */
    public boolean hasVehicleUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'vehicle_uuid' field.
      * It's the vehicle system unique identification on the format UUID
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder clearVehicleUuid() {
      vehicle_uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'x_coordinate' field.
      * It's the x geography coordinate position of the tracked vehicle
      * @return The value.
      */
    public java.lang.Integer getXCoordinate() {
      return x_coordinate;
    }

    /**
      * Sets the value of the 'x_coordinate' field.
      * It's the x geography coordinate position of the tracked vehicle
      * @param value The value of 'x_coordinate'.
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder setXCoordinate(int value) {
      validate(fields()[1], value);
      this.x_coordinate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'x_coordinate' field has been set.
      * It's the x geography coordinate position of the tracked vehicle
      * @return True if the 'x_coordinate' field has been set, false otherwise.
      */
    public boolean hasXCoordinate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'x_coordinate' field.
      * It's the x geography coordinate position of the tracked vehicle
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder clearXCoordinate() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'y_coordinate' field.
      * It's the y geography coordinate position of the tracked vehicle
      * @return The value.
      */
    public java.lang.Integer getYCoordinate() {
      return y_coordinate;
    }

    /**
      * Sets the value of the 'y_coordinate' field.
      * It's the y geography coordinate position of the tracked vehicle
      * @param value The value of 'y_coordinate'.
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder setYCoordinate(int value) {
      validate(fields()[2], value);
      this.y_coordinate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'y_coordinate' field has been set.
      * It's the y geography coordinate position of the tracked vehicle
      * @return True if the 'y_coordinate' field has been set, false otherwise.
      */
    public boolean hasYCoordinate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'y_coordinate' field.
      * It's the y geography coordinate position of the tracked vehicle
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder clearYCoordinate() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicle_description' field.
      * It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional
      * @return The value.
      */
    public java.lang.String getVehicleDescription() {
      return vehicle_description;
    }

    /**
      * Sets the value of the 'vehicle_description' field.
      * It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional
      * @param value The value of 'vehicle_description'.
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder setVehicleDescription(java.lang.String value) {
      validate(fields()[3], value);
      this.vehicle_description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicle_description' field has been set.
      * It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional
      * @return True if the 'vehicle_description' field has been set, false otherwise.
      */
    public boolean hasVehicleDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'vehicle_description' field.
      * It's the vehicle brief description. Ex.: Chevrolet sedan four doors. It's optional
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder clearVehicleDescription() {
      vehicle_description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicle_price' field.
      * It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000.
      * @return The value.
      */
    public java.lang.Integer getVehiclePrice() {
      return vehicle_price;
    }

    /**
      * Sets the value of the 'vehicle_price' field.
      * It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000.
      * @param value The value of 'vehicle_price'.
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder setVehiclePrice(int value) {
      validate(fields()[4], value);
      this.vehicle_price = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicle_price' field has been set.
      * It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000.
      * @return True if the 'vehicle_price' field has been set, false otherwise.
      */
    public boolean hasVehiclePrice() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'vehicle_price' field.
      * It's the current vehicle's price. The last two number are the cents. Ex.: A price R$ 9.400,95 will be 940095. A price R$ 9.000 wil be 900000.
      * @return This builder.
      */
    public avro.vehicle.tracker.VehiclePositionCoordinate.Builder clearVehiclePrice() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public VehiclePositionCoordinate build() {
      try {
        VehiclePositionCoordinate record = new VehiclePositionCoordinate();
        record.vehicle_uuid = fieldSetFlags()[0] ? this.vehicle_uuid : (java.lang.String) defaultValue(fields()[0]);
        record.x_coordinate = fieldSetFlags()[1] ? this.x_coordinate : (java.lang.Integer) defaultValue(fields()[1]);
        record.y_coordinate = fieldSetFlags()[2] ? this.y_coordinate : (java.lang.Integer) defaultValue(fields()[2]);
        record.vehicle_description = fieldSetFlags()[3] ? this.vehicle_description : (java.lang.String) defaultValue(fields()[3]);
        record.vehicle_price = fieldSetFlags()[4] ? this.vehicle_price : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<VehiclePositionCoordinate>
    WRITER$ = (org.apache.avro.io.DatumWriter<VehiclePositionCoordinate>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<VehiclePositionCoordinate>
    READER$ = (org.apache.avro.io.DatumReader<VehiclePositionCoordinate>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
