# Producer properties
spring.kafka.producer.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# The producer groups together any records that arrive in between request transmissions into a single batched request
# https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#producerconfigs_linger.ms
# Linger MS
# Time to wait for batching requests instead of always send requests right away after asked
# Time in milliseconds to wait.
spring.kafka.producer.linger_ms=10

# This means the producer will wait for the full set of minimal in-sync replicas to acknowledge the record
spring.kafka.producer.acks=all

# This means trying the max attempts value to transition error. For example as eventually unavailability of kafka broker.
spring.kafka.producer.retries=10000000

# This means kafka will guaratee not duplicated messages in case some connection error with kafka broker for example.
# Here's a post explaning this property in detail: https://www.cloudkarafka.com/blog/apache-kafka-idempotent-producer-avoiding-message-duplication.html
spring.kafka.producer.idempotence_enabled=true

###############################################################
# For high throughput producer consider tuning these properties

# Batch Size
# Controls the max baching requests size to send at once
# https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#producerconfigs_batch.size
# Ex.: in bytes 512000 | In Kilobytes = 500
# Default value is 16 kilobytes = 16384 bytes
#spring.kafka.producer.batch.size=512000

# Buffer Memory
# Total memory to buffer batching requests in bytes.
# Default value is 33554432 bytes = 32 megabytes
# https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#producerconfigs_buffer.memory
#spring.kafka.producer.buffer.memory=33554432
###############################################################

spring.kafka.producer.properties.schema.registry.url=http://localhost:8081

spring.kafka.producer.group-id=kafka-producer-id

topic.name=push.vehicle-position-coordinate.created
